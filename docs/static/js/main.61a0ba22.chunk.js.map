{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","scolor","fcolor","className","style","background","src","alt","Cards","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA8BeA,EAtBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAChC,OACE,sBACEC,UAAU,YACVC,MAAO,CACLC,WAAW,4BAAD,OAA8BH,EAA9B,aAAyCD,EAAzC,MAHd,UAME,qBAAKK,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QCoCIS,EAlDD,WA6BZ,OACE,mCA5BS,CACX,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAODC,KAAI,YAAkC,IAAhCV,EAA+B,EAA/BA,KAAMW,EAAyB,EAAzBA,IAAKR,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,OAC5B,OAAO,cAAC,EAAD,CAAiBF,KAAMA,EAAMC,IAAKU,EAAKR,OAAQA,EAAQD,OAAQA,GAApDF,SCzBbY,EARH,WACV,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61a0ba22.chunk.js","sourcesContent":["//Un solo componente Card\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //Para darle un tipo de datos a los props\n\nimport './Card.css';\n\n//Es doble llave porque un par es por sintaxis de react y el otro es un objeto para poner los estilos necesarios\nconst Card = ({lang, img, scolor, fcolor}) => {\n  return (\n    <div\n      className=\"container\"\n      style={{\n        background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\n      }}\n    >\n      <img src={img} alt=\"lang.svg\" />\n      <h2>{lang}</h2>\n    </div>\n  )\n}\n\n// Es para evitar el \"no se sabe que regresa al final\" \nCard.propTypes = {\n  lang: PropTypes.string,\n  img: PropTypes.string,\n  fcolor: PropTypes.string,\n  scolor: PropTypes.string,\n};\n\nexport default Card;\n","//Contenedor de Cards\nimport Card from './Card';\n\nconst Cards = () => {\n\nconst data = [\n  {\n    \"lang\": \"Python\",\n    \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\n    \"fcolor\": \"#00c3ff\",\n    \"scolor\": \"#ffff1c\"\n  },\n  {\n    \"lang\": \"Java\",\n    \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\n    \"fcolor\": \"#D31027\",\n    \"scolor\": \"#EA384D\"\n  },\n  {\n    \"lang\": \"React\",\n    \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\n    \"fcolor\": \"#000428\",\n    \"scolor\": \"#004e92\"\n  },\n  {\n    \"lang\": \"Perl\",\n    \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\n    \"fcolor\": \"#cc2b5e\",\n    \"scolor\": \"#753a88\"\n  }\n]; //Copiar el contenido del json\n\n  return (\n    <>\n      {\n        data.map(({lang, url, fcolor, scolor}) => {\n          return <Card key={lang} lang={lang} img={url} fcolor={fcolor} scolor={scolor} />;\n        })\n      }\n    </>\n  )\n}\n\n/*\nLas etiquetas vacias son fragmentos de React para no tener\ndivs anidados.\nOtra forma de escribirlo es la siguiente\n    <React.Fragment>\n      <Card />\n    </React.Fragment>\n\n*/\n\nexport default Cards;\n","import './App.css';\nimport Cards from './components/Cards.jsx';\n//      <Contador inicial={5} factor={5}/>\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}